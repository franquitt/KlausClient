package chatuniformconeccion;


import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this template, choose Tools | Templates and open the template in
 * the editor.
 */
/**
 *
 * @author user2
 */
public class ConfirmGroup extends javax.swing.JFrame {

    /**
     * Creates new form ConfirmFriend
     */
    private Statement st;
    private String usuario = "";
    private ResultSet rs = null;
    private Connection conexion = null;

    public ConfirmGroup(String usuario, Connection conexion) {
        initComponents();
        this.conexion = conexion;
        this.usuario = usuario;
        try {
            st = conexion.createStatement();
        } catch (SQLException ex) {
            Logger.getLogger(IconsForm.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void refrescarLista() {
        String query = "SELECT * FROM webchat_users WHERE name = '" + usuario + "'";
        ResultSet rs2 = null;
        try {
            rs2 = st.executeQuery(query);
        } catch (SQLException ex) {
            Logger.getLogger(Graficos.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            if (rs2.next()) {



                String amigos = rs2.getString("groupsrq");

                if (amigos != null && !amigos.equals("")) {
                    String[] arrayAmigos = amigos.split(", ");
                    btnConfirmarG.setEnabled(true);
                    listaSolicitudesG.setListData(arrayAmigos);
                } else // print the results
                {
                    String[] nadita = {"No tienes solicitudes nuevas"};
                    listaSolicitudesG.setListData(nadita);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Graficos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listaSolicitudesG = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        btnConfirmarG = new javax.swing.JButton();
        btnActualizarG = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Confirmar solicitud de grupo");

        jScrollPane1.setViewportView(listaSolicitudesG);

        jLabel1.setText("Confirmar solicitud de grupo");

        btnConfirmarG.setText("Confirmar");
        btnConfirmarG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarGActionPerformed(evt);
            }
        });

        btnActualizarG.setText("Actualizar");
        btnActualizarG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarGActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnConfirmarG)
                            .addComponent(btnActualizarG)))
                    .addComponent(jLabel1)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnActualizarG)
                        .addGap(11, 11, 11)
                        .addComponent(btnConfirmarG)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnActualizarGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarGActionPerformed
        // TODO add your handling code here:
        refrescarLista();
    }//GEN-LAST:event_btnActualizarGActionPerformed

    private void btnConfirmarGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarGActionPerformed
        int index = listaSolicitudesG.getSelectedIndex();
        if (index != -1) {
            Object o = listaSolicitudesG.getModel().getElementAt(index);
            String confirmado = o.toString();

            //*****************************   request recibidas
            String query = "SELECT * FROM webchat_users WHERE name = '" + usuario + "'";

            try {
                rs = st.executeQuery(query);
            } catch (SQLException ex) {
                Logger.getLogger(AddFriend.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                if (rs.next()) {

                    String amigosrqr = rs.getString("groupsrq");

                    if (amigosrqr != null && !amigosrqr.equals("")) {
                        String[] arrayAmigos = amigosrqr.split(", ");
                        String amigosNuevos = "";
                       
                        for (int i = 0; i < arrayAmigos.length; i++) {
                            //System.out.println("\n"+arrayAmigos[i]+" nick "+nick+"\n");
                            if (!arrayAmigos[i].equals(confirmado)) {
                                if (amigosNuevos != null && !amigosNuevos.equals("")) {
                                    amigosNuevos += ", " + arrayAmigos[i];
                                } else {
                                    amigosNuevos = arrayAmigos[i];
                                }
                            }
                        }
                        String amigos = rs.getString("groups");
                        if (amigos != null && !amigos.equals("")) {
                            amigos += ", " + confirmado;
                        } else {
                            amigos = confirmado;
                        }
                        System.out.println(amigos);
                        System.out.println("actualizado amigos con:\n" + amigosNuevos + "\n");
                        st.executeUpdate("UPDATE webchat_users SET groupsrq='" + amigosNuevos + "', groups='" + amigos + "' WHERE name='" + usuario + "'");
                        refrescarLista();
                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(Graficos.class.getName()).log(Level.SEVERE, null, ex);
            }
            //*****************************   request enviadas
            query = "SELECT * FROM webchat_groups WHERE name = '" + confirmado + "'";

            try {
                rs = st.executeQuery(query);
            } catch (SQLException ex) {
                Logger.getLogger(AddFriend.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                if (rs.next()) {
                    String amigos = rs.getString("friends");
                    amigos += ", " + usuario;
                    st.executeUpdate("UPDATE webchat_groups SET friends='" + amigos + "' WHERE name='" + confirmado + "'");
                    refrescarLista();
                }
            } catch (SQLException ex) {
                Logger.getLogger(Graficos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_btnConfirmarGActionPerformed

    @Override
    public void dispose() {
        try {
            st.close();
        } catch (SQLException ex) {
            Logger.getLogger(ConfirmGroup.class.getName()).log(Level.SEVERE, null, ex);
        }
        super.dispose(); //To change body of generated methods, choose Tools | Templates.
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizarG;
    private javax.swing.JButton btnConfirmarG;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList listaSolicitudesG;
    // End of variables declaration//GEN-END:variables
}
